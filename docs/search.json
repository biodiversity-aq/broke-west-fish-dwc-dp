[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Exploring DwCA_v2 with marine community measurements dataset",
    "section": "",
    "text": "This is an attempt to map BROKE-West Fish dataset as a marine survey and community measurements use case of the new data model to DwCAv2 and explore what information can be retrieve from DwCAv2."
  },
  {
    "objectID": "index.html#introduction",
    "href": "index.html#introduction",
    "title": "Exploring DwCA_v2 with marine community measurements dataset",
    "section": "",
    "text": "This is an attempt to map BROKE-West Fish dataset as a marine survey and community measurements use case of the new data model to DwCAv2 and explore what information can be retrieve from DwCAv2."
  },
  {
    "objectID": "index.html#acknowledgement",
    "href": "index.html#acknowledgement",
    "title": "Exploring DwCA_v2 with marine community measurements dataset",
    "section": "Acknowledgement",
    "text": "Acknowledgement\nThis mapping exercise is part of ADVANCE project that is funded by BELSPO (BELSPO project RT/23/ADVANCE).\nDocumenting this mapping exercise in Quarto is inspired by the approach of OBIS USA (Steve Formel and Kylie Hollis)\nWe are grateful and appreciate the various contributions received from the following contributors during this exercise:\n\nJohn Wieczorek\nAnton Van de Putte\nCecilie Svenningsen\nKate Ingenloff\nTim Robertson"
  },
  {
    "objectID": "generate-dwcav2.html",
    "href": "generate-dwcav2.html",
    "title": "Transform dataset into DwCA v2",
    "section": "",
    "text": "The mapping is based on schema from https://rs.gbif.org/sandbox/experimental/data-packages/dwc-dp/0.1/",
    "crumbs": [
      "Home",
      "DwCA v2",
      "Generate tables for DwCA_v2"
    ]
  },
  {
    "objectID": "generate-dwcav2.html#dwca-v2",
    "href": "generate-dwcav2.html#dwca-v2",
    "title": "Transform dataset into DwCA v2",
    "section": "",
    "text": "The mapping is based on schema from https://rs.gbif.org/sandbox/experimental/data-packages/dwca_v2/0.1/",
    "crumbs": [
      "Home",
      "DwCA v2",
      "Generate tables for DwCA_v2"
    ]
  },
  {
    "objectID": "generate-dwcav2.html#clean-fish-data",
    "href": "generate-dwcav2.html#clean-fish-data",
    "title": "Transform dataset into DwCA v2",
    "section": "Clean fish data",
    "text": "Clean fish data\nClean the fish data so that the fields are ready for use for further manipulation.\n\nlibrary(worrms)\n\ncleaned_fish &lt;- raw_fish_data %&gt;%\n  # exclude those without sample number\n  filter(`Sample number` != \"/\") %&gt;%\n  rename(\n    family = Family,\n    preparations = presrvation,\n    disposition = Location,\n    lifeStage = C1,\n    materialEntityID = `Sample number`,\n    netSize = `Net Size`\n  ) %&gt;%\n  mutate(\n    station_number_cleaned = str_remove_all(`Station number`, \"\\\\s*\"), # Remove white spaces\n    eventID = str_c(\"BROKE_WEST_RMT_\", station_number_cleaned, \"_RMT\", `netSize`), \n    verbatimIdentification = case_when(\n      Species == \"Unidentified\" ~ \"\", \n      Species == \"/\" ~ \"\",\n      TRUE ~ Species),\n    scientificName = case_when(\n      grepl(\" sp\\\\.$\", verbatimIdentification) ~ sub(\" sp\\\\.$\", \"\", verbatimIdentification),\n      # correct typo of scientificName based on WoRMS\n      verbatimIdentification == \"Protomytophum bollini\" ~ \"Protomyctophum bolini\",\n      verbatimIdentification == \"Artedidraco scottsbergi\" ~ \"Artedidraco skottsbergi\",\n      verbatimIdentification == \"Gymnoscophelus braueri\" ~ \"Gymnoscopelus braueri\",\n      # Unidentified == Biota because lifeStage = larvae for these records. Can we be sure that these are fish?\n      Species == \"Unidentified\" ~ \"Biota\", \n      Species == \"/\" ~ \"\",\n      TRUE ~ verbatimIdentification\n    )\n    # no more identificationQualifier, use verbatimIdentification :)\n  )\n  \n# match unique scientificName to WoRMS to obtain LSID of AphiaID\nmatched_taxa &lt;- wm_records_names(unique(cleaned_fish$scientificName)) %&gt;%\n  # the taxon match returns list of lists, this function creates a table of the following fields out of the lists\n  # keep aphiaID for surveyTargetID\n  map_df(~ select(.x, scientificname, lsid, rank, kingdom, AphiaID)) %&gt;%\n  rename(scientificName = scientificname, scientificNameID = lsid, taxonRank = rank)\n\n# join table to get scientificNameID and taxonRank\ncleaned_fish &lt;- cleaned_fish %&gt;% \n  left_join(matched_taxa, by = \"scientificName\")\n\n# preview distinct verbatimIdentification and matched scientificName and scientificNameID from WoRMS\ncleaned_fish %&gt;% distinct(verbatimIdentification, scientificName, scientificNameID, kingdom)",
    "crumbs": [
      "Home",
      "DwCA v2",
      "Generate tables for DwCA_v2"
    ]
  },
  {
    "objectID": "generate-dwcav2.html#create-event-table",
    "href": "generate-dwcav2.html#create-event-table",
    "title": "Transform dataset into DwCA v2",
    "section": "Create Event table",
    "text": "Create Event table\nEvent cannot have multiple eventClass. Hence, a Survey Event would have the same spatiotemporal context information as the Material Gathering Event, but they would be separate Events, one for eventID == surveyID and one for eventID == materialGatheringID. In order to achieve this, all Events are duplicated into eventID_S for Survey Event and eventID_MG for MaterialGathering Event.\n\n# netSize level of event is needed here because surveyTarget is pointing to a surveyID in which surveyTargetAbundance report the count. If netSize is not specified, we cannot tell which net caught the target  \n# Suffix options: net-size_Survey, net-size_MaterialGathering\nsuffixes &lt;- c(\"1_S\", \"1_MG\", \"8_S\", \"8_MG\")\n\n# Generate replicated rows with new eventIDs\nevent &lt;- events %&gt;%\n  filter(eventID != \"BROKE_WEST\") %&gt;%\n  expand_grid(suffix = suffixes) %&gt;%\n  mutate(eventID = paste0(eventID, \"_\", suffix), \n         eventType = case_when(suffix == \"1_S\" | suffix == \"8_S\" ~ \"Survey\",\n                               suffix == \"1_MG\" | suffix == \"8_MG\" ~ \"MaterialGathering\",\n                               TRUE ~ NA),\n         eventClass = case_when(eventType == \"Survey\" ~ \"Survey\",\n                                eventType == \"MaterialGathering\" ~ \"MaterialGathering\")) %&gt;%\n  bind_rows(events %&gt;% filter(eventID == \"BROKE_WEST\"))\n\n# example of resulting Event duplicated into Survey and MaterialGathering Event\nevent %&gt;% \n  filter(str_starts(eventID, \"BROKE_WEST_RMT_001\")) %&gt;%\n  select(eventID, eventType, eventClass)",
    "crumbs": [
      "Home",
      "DwCA v2",
      "Generate tables for DwCA_v2"
    ]
  },
  {
    "objectID": "generate-dwcav2.html#create-material-gathering-table",
    "href": "generate-dwcav2.html#create-material-gathering-table",
    "title": "Transform dataset into DwCA v2",
    "section": "Create Material Gathering table",
    "text": "Create Material Gathering table\nMaterialGathering table is only consists of materialGatheringID.\n\nmat_gat &lt;- event %&gt;% \n  filter(eventClass == \"MaterialGathering\") %&gt;%\n  select(eventID) %&gt;%\n  rename(materialGatheringID = eventID)\n\nhead(mat_gat)",
    "crumbs": [
      "Home",
      "DwCA v2",
      "Generate tables for DwCA_v2"
    ]
  },
  {
    "objectID": "generate-dwcav2.html#create-material-table",
    "href": "generate-dwcav2.html#create-material-table",
    "title": "Transform dataset into DwCA v2",
    "section": "Create Material table",
    "text": "Create Material table\nMaterial includes:\n\npreserved individual fish\nstomach content of individual fish\n\n\nindividual_fish &lt;- cleaned_fish %&gt;% \n  mutate(\n    materialEntityType = \"whole organism\",  # TODO: check if occurrenceID with FP is whole organism\n    materialGatheringID = str_c(eventID, \"_MG\"), # concatenate values\n    ) %&gt;% \n  select(\n    materialEntityID, materialGatheringID, materialEntityType, preparations, disposition, verbatimIdentification, scientificName, scientificNameID, kingdom, taxonRank\n  ) # keep verbatimIdentification, scientificName, scientificNameID, kingdom, taxonRank to construct Identification table\n\nstomach &lt;- raw_stomach %&gt;%\n  mutate(\n    seqNum = sprintf(\"%03d\", row_number()), # zero-padded sequential number\n    materialEntityID = str_c(`Fish ID`, \"_stomach_\", seqNum, \"_\", `Stomach Item`),\n    materialEntityType = \"stomach content\",\n    derivedFromMaterialEntityID = `Fish ID`,\n    derivationType = \"stomach content of\",\n    partOfMaterialEntityID = `Fish ID`,\n    verbatimIdentification = `Stomach Item`,\n    materialEntityRemarks = Remarks\n  ) %&gt;% \n  left_join(individual_fish, by = c(\"derivedFromMaterialEntityID\" = \"materialEntityID\")) %&gt;%\n  # because left_join renamed the following columns since it is present in both individual_fish and stomach table\n  mutate(materialEntityType = materialEntityType.x,\n         verbatimIdentification = verbatimIdentification.x) %&gt;% \n  select(materialEntityID, materialEntityType, verbatimIdentification, derivedFromMaterialEntityID, derivationType, partOfMaterialEntityID, materialGatheringID, materialEntityRemarks)\n\n# combine both tables into a Material table\nmaterial &lt;- bind_rows(individual_fish, stomach) \n\n# preview example of a full fish + its stomach content in Material table\nmaterial %&gt;% filter(str_starts(materialEntityID, \"AAV3FF_00025\"))",
    "crumbs": [
      "Home",
      "DwCA v2",
      "Generate tables for DwCA_v2"
    ]
  },
  {
    "objectID": "generate-dwcav2.html#create-agent-table",
    "href": "generate-dwcav2.html#create-agent-table",
    "title": "Transform dataset into DwCA v2",
    "section": "Create Agent table",
    "text": "Create Agent table\nThere is only Anton here because this version of dataset does not contain squid records (from the catch).\n\nagent &lt;- tibble(\n  agentID = \"https://orcid.org/0000-0003-1336-5554\",\n  agentType = \"person\",\n  preferredAgentName = \"Anton Van de Putte\"\n)",
    "crumbs": [
      "Home",
      "DwCA v2",
      "Generate tables for DwCA_v2"
    ]
  },
  {
    "objectID": "generate-dwcav2.html#create-identification-table",
    "href": "generate-dwcav2.html#create-identification-table",
    "title": "Transform dataset into DwCA v2",
    "section": "Create Identification table",
    "text": "Create Identification table\nIt was a mixed of remarks for material entity and identification in the original table, so I put the information under both materialEntityRemarks and identificationRemarks.\nQuestion: I am expecting OBIS to ask about why taxonID and not scientificNameID.\n\nfish_id_guide &lt;- \"https://archive.org/details/fishesofsouthern00gono | Kellermann, A. (1990): Identification Key and Catalogue of Larval Antarctic Fishes , Berichte zur Polarforschung (Reports on Polar Research), Bremerhaven, Alfred Wegener Institute for Polar and Marine Research, 67 , 136 p. . doi: 10.2312/BzP_0067_1990 | https://archive.org/details/cybium-7-002-003-074\"\n\nidentification &lt;- material %&gt;%\n  rename(identificationRemarks = materialEntityRemarks,\n         taxonID = scientificNameID) %&gt;%\n  mutate(\n    identificationID = paste(materialEntityID, \"ID\", sep = \"_\"),\n    identificationBasedOnMaterialEntityID = materialEntityID,\n    identificationType = \"MaterialEntity\",\n    identificationTypeIRI = \"http://rs.tdwg.org/dwc/terms/MaterialEntity\",\n    identifiedBy = \"Anton Van de Putte\",\n    identifiedByID = \"https://orcid.org/0000-0003-1336-5554\",\n    identificationReferences = fish_id_guide) %&gt;%\n  select(identificationID, identificationBasedOnMaterialEntityID, identificationType, identificationTypeIRI, verbatimIdentification, identifiedBy, identifiedByID, identificationReferences, identificationRemarks, taxonID, kingdom, scientificName, taxonRank)\nhead(identification)",
    "crumbs": [
      "Home",
      "DwCA v2",
      "Generate tables for DwCA_v2"
    ]
  },
  {
    "objectID": "generate-dwcav2.html#create-survey-table",
    "href": "generate-dwcav2.html#create-survey-table",
    "title": "Transform dataset into DwCA v2",
    "section": "Create Survey table",
    "text": "Create Survey table\nSurvey table is a table that contains current Humboldt Extension terms.\n\nsuffixes &lt;- c(\"1_S\",\"8_S\")\n\nsurvey &lt;- humboldt %&gt;%\n  filter(eventID != \"BROKE_WEST\") %&gt;% # remove the expedition event, only link humboldt to the lowest level of Survey Events\n  expand_grid(suffix = suffixes) %&gt;%\n  mutate(eventID = paste0(eventID, \"_\", suffix),\n         # need to cast netSize to string so that it can be joined later (so that it is not a double)\n         netSize = case_when(suffix == \"1_S\" ~ \"1\", suffix == \"8_S\" ~ \"8\", TRUE ~ NA)) %&gt;%\n  rename(surveyID = eventID) %&gt;%\n  # remove fields that were empty or need to be amended based on new understanding of survey target\n  select(-`ecoiri:targetTaxonomicScope`, -`excludedLifeStageScope`, -verbatimSiteDescriptions, -eventDuration, -isAbundanceReported, -isAbsenceReported, -hasMaterialSamples, -materialSampleTypes, -isTaxonomicScopeFullyReported, -isLifeStageScopeFullyReported, -isLeastSpecificTargetCategoryQuantityInclusive, -areNonTargetTaxaFullyReported, -suffix)\n\nhead(survey)",
    "crumbs": [
      "Home",
      "DwCA v2",
      "Generate tables for DwCA_v2"
    ]
  },
  {
    "objectID": "generate-dwcav2.html#create-survey-target-and-survey-target-abundance-tables",
    "href": "generate-dwcav2.html#create-survey-target-and-survey-target-abundance-tables",
    "title": "Transform dataset into DwCA v2",
    "section": "Create Survey Target and Survey Target Abundance tables",
    "text": "Create Survey Target and Survey Target Abundance tables\nAfter extensive discussions on what target is, we decided to create survey-target table retrospectively. SurveyTarget needs to be created per net size because it is linked to a Survey (lowest level of Survey is per net size) via SurveyID. SurveyTargetAbundance points to the Survey through the SurveyTarget record.\nChallenge: There is only total count for fish from RMT8 and not RMT1. The total count also does not contain any sex and lifeStage for all the taxa except Electrona antarctica. But sex and lifeStage are available in the Material table for a subset of data.\n\ntransform_rmt_count_to_long &lt;- function(df){\n  #' Convert wide count table into long table\n  #' \n  #' @param df A tibble of the count table with taxon as columns and trawl event as rows\n  #' @return A list of 2 tibbles, one is survey_target, the other is survey_target_abundance table\n  trawl &lt;- df %&gt;%\n  pivot_longer(cols = 5:ncol(df),\n               names_to = \"verbatimIdentification\",\n               values_to = \"organismQuantity\",\n               values_drop_na = TRUE) %&gt;%\n  mutate(\n    organismQuantityType = case_when(organismQuantity &gt;= 1 ~ \"individuals\", TRUE ~ \"individual\"),\n    lifeStage = case_when(\n      str_detect(verbatimIdentification, \" all$\") ~ \"\",\n      str_detect(verbatimIdentification, \" Larvae$\") ~ \"Larvae\",\n      str_detect(verbatimIdentification, \" Postmeta$\") ~ \"Postmeta\",\n      TRUE ~ \"\"\n    ),\n    identificationQualifier = if_else(str_detect(verbatimIdentification, \" sp\\\\.$\"), \"sp.\", \"\"),\n    # \\\\s* is needed to remove the white space for the resulting observedTaxon so that we don't get \"Electrona antarctica \"\n    # use field name \"taxon\" for surveyTargetType vocabulary later\n    taxon = str_remove_all(verbatimIdentification, \"\\\\s*(all|Larvae|Postmeta|sp\\\\.)$\"),\n    station_number_cleaned = str_remove_all(`Station number`, \"\\\\s*\"), # Remove white spaces\n    surveyID = str_c(\"BROKE_WEST_RMT_\", station_number_cleaned, \"_8_S\"),\n    # need to cast body size to string otherwise double cannot be in the same column with string after pivot_long\n    # only use size range for RMT8 here because there is no count data for RMT1 \n    `minimum body size` = \"0.85\",\n    `maximum body size` = \"3\"\n  )\n\ntrawl_taxa &lt;- wm_records_names(unique(trawl$taxon)) %&gt;%\n  # the taxon match returns list of lists, this function creates a table of the following fields out of the lists\n  map_df(~ select(.x, scientificname, lsid, AphiaID, rank)) %&gt;%\n  rename(taxon = scientificname, observedTaxonID = lsid, taxonRank = rank)\n\ntrawl_count &lt;- trawl %&gt;% \n  left_join(trawl_taxa, by = \"taxon\") %&gt;%\n  mutate(surveyTargetID = case_when(\n    lifeStage != \"\" ~ str_c(AphiaID, lifeStage, sep = \"_\"),\n    TRUE ~ as.character(AphiaID)))\n\ntrawl_long &lt;- trawl_count %&gt;%\n  pivot_longer(\n    cols = c(\"taxon\", \"lifeStage\", \"taxonRank\", \"minimum body size\", \"maximum body size\"),\n    names_to = \"surveyTargetType\",\n    values_to = \"surveyTargetValue\",\n    values_drop_na = TRUE\n  ) %&gt;%\n  mutate(\n    surveyTargetUnit = case_when(\n      surveyTargetType == \"minimum body size\" ~ \"mm\",\n      surveyTargetType == \"maximum body size\" ~ \"m\",\n      TRUE ~ NA\n    ),\n    surveyTargetUnitID = case_when(\n      surveyTargetUnit == \"mm\" ~ \"http://vocab.nerc.ac.uk/collection/P06/current/UXMM/\",\n      surveyTargetUnit == \"m\" ~ \"http://vocab.nerc.ac.uk/collection/P06/current/ULAA/\",\n      TRUE ~ NA\n    ),\n    surveyTargetValueID = case_when(\n      surveyTargetType == \"taxon\" ~ observedTaxonID,\n      surveyTargetValue == \"Genus\" ~ \"http://rs.tdwg.org/dwc/terms/genus\",\n      surveyTargetValue == \"Species\" ~ \"http://rs.tdwg.org/dwc/terms/specificEpithet\",\n      surveyTargetValue == \"Family\" ~ \"http://rs.tdwg.org/dwc/terms/family\",\n      TRUE ~ NA\n    )\n  ) %&gt;% filter(!(surveyTargetType == \"lifeStage\" & surveyTargetValue == \"\")) # exclude empty lifeStage row\n\nsurvey_target &lt;- trawl_long %&gt;%\n  select(surveyTargetID, surveyID, surveyTargetType, surveyTargetValue, surveyTargetValueID, surveyTargetUnit, surveyTargetUnitID)\n\nsurvey_target_abundance &lt;- trawl_long %&gt;%\n  filter(surveyTargetType == \"taxon\") %&gt;%\n  rename(observedTaxon = surveyTargetValue) %&gt;%\n  select(surveyTargetID, surveyID, observedTaxon, observedTaxonID, organismQuantity, organismQuantityType)\n\nreturn(list(survey_target = survey_target, survey_target_abundance = survey_target_abundance))\n}\n\nroutine_trawl &lt;- transform_rmt_count_to_long(raw_count_routine)\ntarget_trawl &lt;- transform_rmt_count_to_long(raw_count_target)\n\nsurvey_target &lt;- rbind(routine_trawl$survey_target, target_trawl$survey_target)\nsurvey_target_abundance &lt;- rbind(routine_trawl$survey_target_abundance, target_trawl$survey_target_abundance)\n\n# preview example tables\nhead(survey_target)\n\n\n  \n\n\nhead(survey_target_abundance)\n\n\n  \n\n\n\nSurveyTargetAbundance table seems to miss a surveyID field since surveyTargetID does not need to be unique.",
    "crumbs": [
      "Home",
      "DwCA v2",
      "Generate tables for DwCA_v2"
    ]
  },
  {
    "objectID": "generate-dwcav2.html#write-files",
    "href": "generate-dwcav2.html#write-files",
    "title": "Transform dataset into DwCA v2",
    "section": "Write files",
    "text": "Write files",
    "crumbs": [
      "Home",
      "DwCA v2",
      "Generate tables for DwCA_v2"
    ]
  },
  {
    "objectID": "explore-dwcav2.html",
    "href": "explore-dwcav2.html",
    "title": "Explore DwCA v2",
    "section": "",
    "text": "You can load the tables from the RDA files like below and play around with the tables as demonstrated in this page. Any pull request is also welcomed.\n\nlibrary(here)\nlibrary(tidyverse)\n\n\n\n\nYes! Example: Total count of electrona antarctica is recorded in SurveyTargetAbundance table, only a subset was preserved and recorded in this dataset. The preserved fish is recorded in the Material table.\n\n\n\nVery often, we received dataset with measurements performed on a specific body part of an organism. Example: https://www.gbif.org/occurrence/3344249657\n\n\nCurrently, I modeled it using eMoF pointing to the Occurrence with body part in measurementRemarks. Specifying the body part can be done through NERC vocabulary. However, it is a hassle to mint NERC for every body part and body part is specific to a taxon.\nOccurrence table\n\n\n\noccurrenceID\nscientificName\n\n\n\n\nSO_Isotope_1985_2017_1013\nGlabraster antarctica (E.A.Smith, 1876)\n\n\n\neMoF table\n\n\n\n\n\n\n\n\n\n\noccurrenceID\nmeasurementType\nmeasurementValue\nmeasurementUnit\nmeasurementRemarks\n\n\n\n\nSO_Isotope_1985_2017_1013\nThe carbon elemental content measured in the tegument of the considered sea star specimen, expressed in relative percentage of dry mass\n12.28\nrelative percentage of dry mass\ntegument\n\n\n\n\n\n\nYes! Relationship between Materials can be specified through the Material table. Example of a krill eaten by a fish can be modeled within a single Material table\n\n#material %&gt;% filter(str_starts(materialEntityID, \"AAV3FF_00025\"))",
    "crumbs": [
      "Home",
      "DwCA v2",
      "Exploring DwCA v2"
    ]
  },
  {
    "objectID": "explore-dwcav2.html#questions",
    "href": "explore-dwcav2.html#questions",
    "title": "Explore DwCA v2",
    "section": "",
    "text": "You can load the tables from the RDA files like below and play around with the tables as demonstrated in this page. Any pull request is also welcomed.\n\nlibrary(here)\nlibrary(tidyverse)\n\n\n\n\nYes! Example: Total count of electrona antarctica is recorded in SurveyTargetAbundance table, only a subset was preserved and recorded in this dataset. The preserved fish is recorded in the Material table.\n\n\n\nVery often, we received dataset with measurements performed on a specific body part of an organism. Example: https://www.gbif.org/occurrence/3344249657\n\n\nCurrently, I modeled it using eMoF pointing to the Occurrence with body part in measurementRemarks. Specifying the body part can be done through NERC vocabulary. However, it is a hassle to mint NERC for every body part and body part is specific to a taxon.\nOccurrence table\n\n\n\noccurrenceID\nscientificName\n\n\n\n\nSO_Isotope_1985_2017_1013\nGlabraster antarctica (E.A.Smith, 1876)\n\n\n\neMoF table\n\n\n\n\n\n\n\n\n\n\noccurrenceID\nmeasurementType\nmeasurementValue\nmeasurementUnit\nmeasurementRemarks\n\n\n\n\nSO_Isotope_1985_2017_1013\nThe carbon elemental content measured in the tegument of the considered sea star specimen, expressed in relative percentage of dry mass\n12.28\nrelative percentage of dry mass\ntegument\n\n\n\n\n\n\nYes! Relationship between Materials can be specified through the Material table. Example of a krill eaten by a fish can be modeled within a single Material table\n\n#material %&gt;% filter(str_starts(materialEntityID, \"AAV3FF_00025\"))",
    "crumbs": [
      "Home",
      "DwCA v2",
      "Exploring DwCA v2"
    ]
  },
  {
    "objectID": "generate-dwcav2.html#darwin-core-data-package",
    "href": "generate-dwcav2.html#darwin-core-data-package",
    "title": "Transform dataset into DwCA v2",
    "section": "",
    "text": "The mapping is based on schema from https://rs.gbif.org/sandbox/experimental/data-packages/dwc-dp/0.1/",
    "crumbs": [
      "Home",
      "DwCA v2",
      "Generate tables for DwCA_v2"
    ]
  },
  {
    "objectID": "generate-dwcav2.html#main-tables",
    "href": "generate-dwcav2.html#main-tables",
    "title": "Transform dataset into DwCA v2",
    "section": "Main tables",
    "text": "Main tables\n\nAgent\nThere is only Anton here because this version of dataset does not contain squid records (from the catch).\n\nagent &lt;- tibble(\n  agentID = c(\"AVdP_collector\", \"AVdP_specimen_identifier\"),\n  agentType = c(\"person\", \"person\"),\n  preferredAgentName = c(\"Anton Van de Putte\", \"Anton Van de Putte\")\n)\n\nagent\n\n\n  \n\n\n\n\n\nEvent\nHow do we determine what eventType to use? e.g. an Event can be both Survey and MaterialGathering.\n\n# Create subevents with net because it is the lowest event with organisms\nsubevents &lt;- event_google %&gt;%\n  filter(eventID != \"BROKE_WEST\") %&gt;% # Exclude the main event\n  mutate(eventType = \"Survey - net type\") %&gt;% # Set eventType for subevents\n  expand_grid(suffix = c(\"_RMT1\", \"_RMT8\")) %&gt;% # Create subevent suffixes with net size\n  mutate(\n    eventID = paste0(eventID, suffix), # Append suffix to eventID\n    parentEventID = eventID %&gt;% sub(\"_RMT[18]$\", \"\", .) # Assign correct parent\n  ) %&gt;%\n  select(-suffix) # Remove the suffix column\n\n# Combine original and subevents\nevent &lt;- bind_rows(event_google, subevents)\nevent %&gt;% filter(str_starts(eventID, \"BROKE_WEST_RMT_001\")) %&gt;% select(eventID, parentEventID, eventType)\n\n\n  \n\n\n\n\n\nMaterial\nMaterial includes:\n\npreserved individual fish\nstomach content of individual fish\n\nCan stomach content material have collectedBy and collectedByID?\n\nindividual_fish &lt;- cleaned_fish %&gt;% \n  mutate(\n    materialEntityType = \"whole organism\",  \n    collectedBy = \"Anton Van de Putte\",\n    collectedByID = \"https://orcid.org/0000-0003-1336-5554\",\n    identifiedBy = \"Anton Van de Putte\",\n    identifiedByID = \"https://orcid.org/0000-0003-1336-5554\",\n    identificationRemarks = case_when(\n      str_detect(COMMENTS, \"closely resembles\") ~ COMMENTS,\n      str_detect(COMMENTS, \"Protomyctophum\") ~ COMMENTS,\n      TRUE ~ \"\"\n    ),\n    materialEntityRemarks = case_when(\n      str_detect(COMMENTS, \"BROKEN | Check | Microsattelite\") ~ COMMENTS,\n      TRUE ~ \"\"\n    )\n    ) %&gt;% \n  select(\n    materialEntityID, eventID, materialEntityType, preparations, disposition, collectedBy, collectedByID, identifiedBy, identifiedByID, verbatimIdentification, scientificName, scientificNameID, kingdom, taxonRank, identificationRemarks, materialEntityRemarks\n  ) %&gt;% rename(taxonID = scientificNameID) # keep verbatimIdentification, scientificName, scientificNameID, kingdom, taxonRank to construct Identification table\n\nstomach &lt;- raw_stomach %&gt;%\n  rename(stomachItem = `Stomach Item`) %&gt;%\n  mutate(\n    seqNum = sprintf(\"%03d\", row_number()), # zero-padded sequential number\n    materialEntityID = str_c(`Fish ID`, \"_stomach_\", seqNum, \"_\", stomachItem),\n    materialEntityType = case_when(\n      stomachItem == \"St wall\" ~ \"stomach content - st wall\",\n      stomachItem == \"Mucus\" ~ \"stomach content - mucus\",\n      stomachItem == \"Other\" ~ \"stomach content - other\",\n      stomachItem == \"Facet eye\" ~ \"stomach content - facet eye\",\n      stomachItem == \"/\" ~ \"stomach content - empty\",\n      TRUE ~ \"stomach content\"),\n    derivedFromMaterialEntityID = `Fish ID`,\n    derivationType = \"stomach content of\",\n    partOfMaterialEntityID = `Fish ID`,\n    identifiedBy = \"Anton Van de Putte\",\n    identifiedByID = \"https://orcid.org/0000-0003-1336-5554\",\n    verbatimIdentification = case_when(\n      str_detect(stomachItem, \"St wall|Mucus|Other|Facet eye|\\\\/\") ~  \"\",\n      TRUE ~ stomachItem\n    ),\n    identificationRemarks = case_when(str_detect(Remarks, \"cf.\") ~ Remarks, TRUE ~ \"\"),\n    materialEntityRemarks = case_when(str_detect(Remarks, \"cf.\") ~ \"\", TRUE ~ Remarks),\n  ) %&gt;% \n  left_join(individual_fish, by = c(\"derivedFromMaterialEntityID\" = \"materialEntityID\")) %&gt;%\n  # because left_join renamed the following columns since it is present in both individual_fish and stomach table\n  mutate(materialEntityType = materialEntityType.x,\n         verbatimIdentification = verbatimIdentification.x,\n         materialEntityRemarks = materialEntityRemarks.x,\n         identificationRemarks = identificationRemarks.x,\n         identifiedBy = identifiedBy.x,\n         identifiedByID = identifiedByID.x) %&gt;% \n  select(materialEntityID, eventID, materialEntityType, identifiedBy, identifiedByID, verbatimIdentification, identificationRemarks, derivedFromMaterialEntityID, derivationType, partOfMaterialEntityID, materialEntityRemarks)\n\n# combine both tables into a Material table\nmaterial &lt;- bind_rows(individual_fish, stomach) \n\n# preview example of a full fish + its stomach content in Material table\nmaterial %&gt;% filter(str_starts(materialEntityID, \"AAV3FF_00025\"))\n\n\n  \n\n\n\n\n\nIdentification\nIdentification terms are mostly part of Material table.\nQuestion: I am expecting OBIS to ask about why taxonID and not scientificNameID.\n\nfish_id_guide &lt;- \"https://archive.org/details/fishesofsouthern00gono | Kellermann, A. (1990): Identification Key and Catalogue of Larval Antarctic Fishes , Berichte zur Polarforschung (Reports on Polar Research), Bremerhaven, Alfred Wegener Institute for Polar and Marine Research, 67 , 136 p. . doi: 10.2312/BzP_0067_1990 | https://archive.org/details/cybium-7-002-003-074\"\n\nidentification &lt;- material %&gt;%\n  mutate(\n    identificationID = paste(materialEntityID, \"ID\", sep = \"_\"),\n    identificationBasedOnMaterialEntityID = materialEntityID,\n    identificationType = \"MaterialEntity\",\n    identificationTypeIRI = \"http://rs.tdwg.org/dwc/terms/MaterialEntity\",\n    identifiedBy = \"Anton Van de Putte\",\n    identifiedByID = \"https://orcid.org/0000-0003-1336-5554\",\n    identificationReferences = fish_id_guide) %&gt;%\n  select(identificationID, identificationBasedOnMaterialEntityID, identificationType, identificationTypeIRI, verbatimIdentification, identifiedBy, identifiedByID, identificationReferences, identificationRemarks, taxonID, kingdom, scientificName, taxonRank)\nhead(identification)\n\n\n  \n\n\n\n\n\nMedia\n\nmedia &lt;- media_google %&gt;% \n  left_join(material, by = \"materialEntityID\") %&gt;% \n  # remove these media records because there is no data associated with these pictures -&gt; we don't know what these are\n  filter(!is.na(eventID)) %&gt;%\n  mutate(mediaDescription = str_c(\"Photo of \", scientificName, \" with its label and a grid.\")) \nhead(media)\n\n\n  \n\n\n\n\n\nSurvey\nSurvey table is a table that contains current Humboldt Extension terms.\n\nsuffixes &lt;- c(\"_RMT1\",\"_RMT8\")\n\nsurvey &lt;- humboldt %&gt;%\n  filter(eventID != \"BROKE_WEST\") %&gt;% # remove the expedition event, only link humboldt to the lowest level of Survey Events\n  expand_grid(suffix = suffixes) %&gt;%\n  mutate(eventID = paste0(eventID, suffix),\n         # need to cast netSize to string so that it can be joined later (so that it is not a double)\n         netSize = case_when(suffix == \"_RMT1\" ~ \"1\", suffix == \"_RMT8\" ~ \"8\", TRUE ~ NA)) %&gt;%\n  # remove fields that were empty or need to be amended based on new understanding of survey target\n  select(-`ecoiri:targetTaxonomicScope`, -verbatimSiteDescriptions, -suffix)\nhead(survey)\n\n\n  \n\n\n\n\n\nProtocol\n\nprotocol &lt;- survey %&gt;% \n  distinct(protocolNames, protocolDescription, protocolReferences) %&gt;%\n  rename(protocolName = protocolNames, protocolCitation = protocolReferences) %&gt;% \n  mutate(protocolType = \"Sampling Effort\",\n         protocolID = case_when(\n           str_detect(protocolName, \"routine\") ~ \"RMT_Routine\",\n           str_detect(protocolName, \"target\") ~ \"RMT_Target\"\n         )) \n\n\n\nSurvey Target & Occurrence\nAfter extensive discussions on what target is, we decided to create survey-target table retrospectively. SurveyTarget needs to be created per net size because it is linked to a Survey (lowest level of Survey is per net size) via SurveyID. SurveyTargetAbundance points to the Survey through the SurveyTarget record.\nChallenge: There is only total count for fish from RMT8 and not RMT1. The total count also does not contain any sex and lifeStage for all the taxa except Electrona antarctica.\n\ntransform_rmt_count_to_long &lt;- function(df){\n  #' Convert wide count table into long table\n  #' \n  #' @param df A tibble of the count table with taxon as columns and trawl event as rows\n  #' @return A list of 2 tibbles, one is survey_target, the other is survey_target_abundance table\n  trawl &lt;- df %&gt;%\n  pivot_longer(cols = 5:ncol(df),\n               names_to = \"verbatimIdentification\",\n               values_to = \"organismQuantity\",\n               values_drop_na = TRUE) %&gt;%\n  mutate(\n    organismQuantityType = case_when(organismQuantity &gt;= 1 ~ \"individuals\", TRUE ~ \"individual\"),\n    life_stage = case_when(\n      str_detect(verbatimIdentification, \" all$\") ~ \"\",\n      str_detect(verbatimIdentification, \" Larvae$\") ~ \"Larvae\",\n      str_detect(verbatimIdentification, \" Postmeta$\") ~ \"Postmeta\",\n      TRUE ~ \"\"\n    ),\n    lifeStage = life_stage, # create extra lifeStage column for occurrence table\n    # use field name \"taxon\" for surveyTargetType vocabulary later\n    taxon = str_remove_all(verbatimIdentification, \"\\\\s*(all|Larvae|Postmeta|sp\\\\.)$\"),\n    station_number_cleaned = str_remove_all(`Station number`, \"\\\\s*\"), # Remove white spaces\n    surveyID = str_c(\"BROKE_WEST_RMT_\", station_number_cleaned, \"_RMT8\"),\n    # need to cast body size to string otherwise double cannot be in the same column with string after pivot_long\n    # only use size range for RMT8 here because there is no count data for RMT1 \n    `minimum body size` = \"0.85\",\n    `maximum body size` = \"3\"\n  )\n\ntrawl_taxa &lt;- wm_records_names(unique(trawl$taxon)) %&gt;%\n  # the taxon match returns list of lists, this function creates a table of the following fields out of the lists\n  map_df(~ select(.x, scientificname, lsid, AphiaID, rank, kingdom)) %&gt;%\n  rename(taxon = scientificname, taxonID = lsid, taxonRank = rank) %&gt;%\n  mutate(taxon_rank = taxonRank) # create extra taxonRank column for occurrence table\n\ntrawl_count &lt;- trawl %&gt;% \n  left_join(trawl_taxa, by = \"taxon\") %&gt;%\n  mutate(surveyTargetID = case_when(\n    lifeStage != \"\" ~ str_c(AphiaID, lifeStage, sep = \"_\"),\n    TRUE ~ as.character(AphiaID)))\n\ntrawl_long &lt;- trawl_count %&gt;%\n  pivot_longer(\n    cols = c(\"taxon\", \"life_stage\", \"taxon_rank\", \"minimum body size\", \"maximum body size\"),\n    names_to = \"surveyTargetType\",\n    values_to = \"surveyTargetValue\",\n    values_drop_na = TRUE\n  ) %&gt;%\n  mutate(\n    surveyTargetUnit = case_when(\n      surveyTargetType == \"minimum body size\" ~ \"mm\",\n      surveyTargetType == \"maximum body size\" ~ \"m\",\n      TRUE ~ NA\n    ),\n    surveyTargetUnitIRI = case_when(\n      surveyTargetUnit == \"mm\" ~ \"http://vocab.nerc.ac.uk/collection/P06/current/UXMM/\",\n      surveyTargetUnit == \"m\" ~ \"http://vocab.nerc.ac.uk/collection/P06/current/ULAA/\",\n      TRUE ~ NA\n    ),\n    surveyTargetValueIRI = case_when(\n      surveyTargetType == \"taxon\" ~ taxonID,\n      surveyTargetValue == \"Genus\" ~ \"http://rs.tdwg.org/dwc/terms/genus\",\n      surveyTargetValue == \"Species\" ~ \"http://rs.tdwg.org/dwc/terms/specificEpithet\",\n      surveyTargetValue == \"Family\" ~ \"http://rs.tdwg.org/dwc/terms/family\",\n      TRUE ~ NA\n    ),\n    surveyTargetType = case_when(\n      surveyTargetType == \"life_stage\" ~ \"life stage\",\n      surveyTargetType == \"taxon_rank\" ~ \"taxon rank\",\n      TRUE ~ surveyTargetType\n    ),\n    includeOrExclude = \"include\",\n    isSurveyTargetFullyReported = \"true\"\n  ) %&gt;% filter(!(surveyTargetType == \"life stage\" & surveyTargetValue == \"\")) # remove empty lifeStage row\n\nsurvey_target &lt;- trawl_long %&gt;%\n  select(surveyTargetID, surveyID, surveyTargetType, surveyTargetValue, surveyTargetValueIRI, surveyTargetUnit, surveyTargetUnitIRI)\n\noccurrence &lt;- trawl_long %&gt;%\n  filter(surveyTargetType == \"taxon\" & organismQuantity != 0) %&gt;%\n  rename(\n    scientificName = surveyTargetValue, \n    eventID = surveyID) %&gt;%\n  mutate(\n    occurrenceStatus = \"present\",\n    recordedBy = \"Anton Van de Putte\",\n    recordedByID = \"https://orcid.org/0000-0003-1336-5554\",\n    identifiedBy = \"Anton Van de Putte\",\n    identifiedByID = \"https://orcid.org/0000-0003-1336-5554\",\n  )\nreturn(list(survey_target = survey_target, occurrence = occurrence))\n}\n\nroutine_trawl &lt;- transform_rmt_count_to_long(raw_count_routine)\ntarget_trawl &lt;- transform_rmt_count_to_long(raw_count_target)\n\nsurvey_target &lt;- rbind(routine_trawl$survey_target, target_trawl$survey_target)\noccurrence &lt;- rbind(routine_trawl$occurrence, target_trawl$occurrence) %&gt;%\n  mutate(occurrenceID = str_c(eventID, surveyTargetID, sep = \"_\")) %&gt;%\n  select(occurrenceID, eventID, recordedBy, recordedByID, identifiedBy, identifiedByID, verbatimIdentification, scientificName, taxonID, taxonRank, kingdom,lifeStage, organismQuantityType, organismQuantity)\n\n# preview example tables\nhead(survey_target)\n\n\n  \n\n\nhead(occurrence)",
    "crumbs": [
      "Home",
      "DwCA v2",
      "Generate tables for DwCA_v2"
    ]
  },
  {
    "objectID": "generate-dwcav2.html#common-tables",
    "href": "generate-dwcav2.html#common-tables",
    "title": "Transform dataset into DwCA v2",
    "section": "Common tables",
    "text": "Common tables\n\nAgent role\n\nAgent Agent role\n\nagent_agent_role &lt;- tibble(\n  agentID = \"AVdP_collector\",\n  agentRole = \"collector\",\n)\nagent_agent_role\n\n\n  \n\n\n\n\n\nEvent Agent role\n\nevent_agent_role &lt;- event %&gt;% \n  select(eventID) %&gt;% filter(eventID != \"BROKE_WEST\") %&gt;%\n  mutate(agentID = \"AVdP_collector\", agentRole = \"collector\")\nevent_agent_role %&gt;% filter(eventID == \"BROKE_WEST_RMT_001\")\n\n\n  \n\n\n\n\n\nIdentification Agent role\n\nidentification_agent_role &lt;- identification %&gt;% \n  select(identificationID) %&gt;%\n  mutate(agentID = \"AVdP_specimen_identifier\", agentRole = \"specimen identifier\")\nhead(identification_agent_role)\n\n\n  \n\n\n\n\n\n\nAssertion\n\nEvent Assertion\n\nevent_assertion &lt;- emof %&gt;% \n  filter(is.na(occurrenceID)) %&gt;%\n  rename(assertionID = measurementID, assertionType = measurementType, assertionTypeIRI = measurementTypeID, assertionValueIRI = measurementValueID, assertionUnit = measurementUnit, assertionUnitIRI = measurementUnitID) %&gt;%\n  mutate(\n    assertionTypeVocabulary = \"http://vocab.nerc.ac.uk/collection/P01/current/\",\n    assertionValue = if_else(grepl(\"[a-zA-Z]\", measurementValue), measurementValue, NA),\n    assertionValueNumeric = if_else(!grepl(\"[a-zA-Z]\", measurementValue), as.numeric(measurementValue), NA),\n    assertionBy = \"Anton Van de Putte\",\n    assertionByID = \"https://orcid.org/0000-0003-1336-5554\",\n    assertionUnitVocabulary = \"http://vocab.nerc.ac.uk/collection/P06/current/\"\n    ) %&gt;%\n  select(assertionID, eventID, assertionType, assertionTypeIRI, assertionTypeVocabulary, assertionValue,\n         assertionValueNumeric, assertionValueIRI, assertionUnit, assertionUnitIRI, assertionUnitVocabulary)\nevent_assertion %&gt;% filter(assertionID == \"BROKE_WEST_RMT_028_temp\")\n\n\n  \n\n\n\n\n\n\nCitation\n\n\n\n\n\nMedia\n\n\nProtocol\n\nEvent Protocol\n\nevent_protocol &lt;- humboldt %&gt;% \n  select(eventID, samplingProtocol) %&gt;% \n  rename(protocolID = samplingProtocol) %&gt;%\n  filter(!is.na(protocolID))\nevent_protocol %&gt;% filter(eventID == \"BROKE_WEST_RMT_001\")\n\n\n  \n\n\n\n\n\n\nIdentifier\n\nAgent Identifier\n\nagent_identifier &lt;- tibble(\n  identifier = c(\"https://orcid.org/0000-0003-1336-5554\", \"https://orcid.org/0000-0003-1336-5554\"),\n  agentID = c(\"AVdP_collector\", \"AVdP_specimen_identifier\"),\n  identifierType = c(\"ORCID\", \"ORCID\"),\n  identifierLanguage = c(\"eng\", \"eng\")\n)",
    "crumbs": [
      "Home",
      "DwCA v2",
      "Generate tables for DwCA_v2"
    ]
  }
]