[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Exploring DwC-DP with marine community measurements dataset",
    "section": "",
    "text": "This is an attempt to map BROKE-West Fish dataset as a marine survey and community measurements use case of the new data model to DwC-DP and explore what information can be retrieve from DwC-DP."
  },
  {
    "objectID": "index.html#introduction",
    "href": "index.html#introduction",
    "title": "Exploring DwC-DP with marine community measurements dataset",
    "section": "",
    "text": "This is an attempt to map BROKE-West Fish dataset as a marine survey and community measurements use case of the new data model to DwC-DP and explore what information can be retrieve from DwC-DP."
  },
  {
    "objectID": "index.html#acknowledgement",
    "href": "index.html#acknowledgement",
    "title": "Exploring DwC-DP with marine community measurements dataset",
    "section": "Acknowledgement",
    "text": "Acknowledgement\nThis mapping exercise is part of ADVANCE project that is funded by BELSPO (BELSPO project RT/23/ADVANCE).\nDocumenting this mapping exercise in Quarto is inspired by the approach of OBIS USA (Steve Formel and Kylie Hollis)\nWe are grateful and appreciate the various contributions received from the following contributors during this exercise:\n\nJohn Wieczorek\nAnton Van de Putte\nCecilie Svenningsen\nKate Ingenloff\nTim Robertson"
  },
  {
    "objectID": "explore-dwc-dp.html",
    "href": "explore-dwc-dp.html",
    "title": "Explore DwC-DP",
    "section": "",
    "text": "You can load all the RDA files like below and play around with the tables as demonstrated in this page. Any pull request is also welcomed.\n\nlibrary(here)\nlibrary(tidyverse)\n\n# Load all the RDA files\nrda_files &lt;- list.files(path = here(\"data\", \"output\", \"rda\"), pattern = \"\\\\.rda$\", full.names = TRUE)\nlapply(rda_files, load, envir = .GlobalEnv)",
    "crumbs": [
      "Home",
      "Darwin Core Data Package",
      "Exploring DwC-DP"
    ]
  },
  {
    "objectID": "explore-dwc-dp.html#questions",
    "href": "explore-dwc-dp.html#questions",
    "title": "Explore DwC-DP",
    "section": "",
    "text": "You can load all the RDA files like below and play around with the tables as demonstrated in this page. Any pull request is also welcomed.\n\n\n\nDoes DwC-DP handles community measurements better than DwCA?\n\n\nIn DwCA, we will have to have all these as Occurrence records so that measurements like “Standard Length” and “Total Length” of each individual in emof has an Occurrence record to point to. However, this does not warrant user to add the organismQuantity of all individuals together.\n\n\n\n\n\n\n\n\n\n\n\noccurrenceID\neventID\nscientificName\nlifeStage\norganismQuantity\norganismQuantityType\n\n\n\n\nBROKE_WEST_RMT_051_RMT8_217697\nBROKE_WEST_RMT_051_RMT8\nElectrona antarctica\nlarvae\n28\nindividuals\n\n\nAAV3FF_00231\nBROKE_WEST_RMT_051_RMT8\nElectrona antarctica\nlarvae\n1\nindividual\n\n\nAAV3FF_00232\nBROKE_WEST_RMT_051_RMT8\nElectrona antarctica\nlarvae\n1\nindividual\n\n\nAAV3FF_00233\nBROKE_WEST_RMT_051_RMT8\nElectrona antarctica\nlarvae\n1\nindividual\n\n\nAAV3FF_00234\nBROKE_WEST_RMT_051_RMT8\nElectrona antarctica\nlarvae\n1\nindividual\n\n\nAAV3FF_00235\nBROKE_WEST_RMT_051_RMT8\nElectrona antarctica\nlarvae\n1\nindividual\n\n\nAAV3FF_00236\nBROKE_WEST_RMT_051_RMT8\nElectrona antarctica\nlarvae\n1\nindividual\n\n\nAAV3FF_00237\nBROKE_WEST_RMT_051_RMT8\nElectrona antarctica\nlarvae\n1\nindividual\n\n\nAAV3FF_00238\nBROKE_WEST_RMT_051_RMT8\nElectrona antarctica\nlarvae\n1\nindividual\n\n\nAAV3FF_00239\nBROKE_WEST_RMT_051_RMT8\nElectrona antarctica\nlarvae\n1\nindividual\n\n\nAAV3FF_00240\nBROKE_WEST_RMT_051_RMT8\nElectrona antarctica\nlarvae\n1\nindividual\n\n\nAAV3FF_00241\nBROKE_WEST_RMT_051_RMT8\nElectrona antarctica\nlarvae\n1\nindividual\n\n\n\n\n\n\nThe Occurrence and Material are separate concepts now. We do not need to have a separate Occurrence just to indicate the total catch of a taxon. We can have a single Occurrence (total catch) with multiple Materials (individual) to indicate the total catch and preserved individuals. The measurements of the individuals (Assertions) can be directly linked to the Materials via the Material Assertion table.\n\nevent_id &lt;- \"BROKE_WEST_RMT_051_RMT8\"\ntaxon_id &lt;- \"urn:lsid:marinespecies.org:taxname:217697\"\n\n# total catch of electrona antarctica from BROKE_WEST_RMT_051_RMT8\noccurrence %&gt;% filter(eventID == event_id & taxonID == taxon_id) %&gt;% \n  select(eventID, occurrenceID, scientificName, lifeStage, organismQuantity, organismQuantityType)\n\n\n  \n\n\n# all preserved electrona antarctica from BROKE_WEST_RMT_051_RMT8\nmat &lt;- material %&gt;% filter(eventID == event_id & taxonID == taxon_id) %&gt;% \n  select(materialEntityID, eventID, materialEntityType, scientificName, preparations)\nmat\n\n\n  \n\n\n# all measurements of individual electrona antarctica from BROKE_WEST_RMT_051_RMT8\nmat %&gt;% left_join(material_assertion, by = \"materialEntityID\") %&gt;% \n  select(materialEntityID, assertionType, assertionValueNumeric, assertionValue, assertionUnit)\n\n\n  \n\n\n\n\n\n\n\nVery often, we received dataset with measurements performed on a specific body part of an organism. Example: https://www.gbif.org/occurrence/3344249657\n\n\nCurrently, I modeled it using eMoF pointing to the Occurrence with body part in measurementRemarks. Specifying the body part can be done through NERC vocabulary. However, it is a hassle to mint NERC for every body part and body part is specific to a taxon.\nOccurrence table\n\n\n\noccurrenceID\nscientificName\n\n\n\n\nSO_Isotope_1985_2017_1013\nGlabraster antarctica (E.A.Smith, 1876)\n\n\n\neMoF table\n\n\n\n\n\n\n\n\n\n\noccurrenceID\nmeasurementType\nmeasurementValue\nmeasurementUnit\nmeasurementRemarks\n\n\n\n\nSO_Isotope_1985_2017_1013\nThe carbon elemental content measured in the tegument of the considered sea star specimen, expressed in relative percentage of dry mass\n12.28\nrelative percentage of dry mass\ntegument\n\n\n\n\n\n\nYes! Relationship between Materials can be specified through the Material table. Example of a krill eaten by a fish can be modeled within a single Material table\n\n#material %&gt;% filter(str_starts(materialEntityID, \"AAV3FF_00025\"))",
    "crumbs": [
      "Home",
      "Darwin Core Data Package",
      "Exploring DwC-DP"
    ]
  },
  {
    "objectID": "generate-dwc-dp.html",
    "href": "generate-dwc-dp.html",
    "title": "Transform dataset into DwC-DP",
    "section": "",
    "text": "The mapping is based on schema from https://rs.gbif.org/sandbox/experimental/data-packages/dwc-dp/0.1/",
    "crumbs": [
      "Home",
      "Darwin Core Data Package",
      "Generate tables for DwC-DP"
    ]
  },
  {
    "objectID": "generate-dwc-dp.html#darwin-core-data-package",
    "href": "generate-dwc-dp.html#darwin-core-data-package",
    "title": "Transform dataset into DwC-DP",
    "section": "",
    "text": "The mapping is based on schema from https://rs.gbif.org/sandbox/experimental/data-packages/dwc-dp/0.1/",
    "crumbs": [
      "Home",
      "Darwin Core Data Package",
      "Generate tables for DwC-DP"
    ]
  },
  {
    "objectID": "generate-dwc-dp.html#clean-fish-data",
    "href": "generate-dwc-dp.html#clean-fish-data",
    "title": "Transform dataset into DwC-DP",
    "section": "Clean fish data",
    "text": "Clean fish data\nClean the fish data so that the fields are ready for use for further manipulation.\n\nlibrary(worrms)\n\ncleaned_fish &lt;- raw_fish_data %&gt;%\n  # exclude those without sample number\n  filter(`Sample number` != \"/\") %&gt;%\n  rename(\n    family = Family,\n    preparations = presrvation,\n    lifeStage = C1,\n    materialEntityID = `Sample number`,\n    netSize = `Net Size`\n  ) %&gt;%\n  mutate(\n    station_number_cleaned = str_remove_all(`Station number`, \"\\\\s*\"), # Remove white spaces\n    eventID = str_c(\"BROKE_WEST_RMT_\", station_number_cleaned, \"_RMT\", `netSize`), \n    disposition = case_when(\n      Location == \"Anton\" ~ \"pending accession into Institue of Natural Sciences' collection\",\n      # not sure where the samples of Evgeny and Megan go\n      TRUE ~ \"\"),\n    verbatimIdentification = case_when(\n      Species == \"Unidentified\" ~ \"\", \n      Species == \"/\" ~ \"\",\n      TRUE ~ Species),\n    scientificName = case_when(\n      grepl(\" sp\\\\.$\", verbatimIdentification) ~ sub(\" sp\\\\.$\", \"\", verbatimIdentification),\n      # correct typo of scientificName based on WoRMS\n      verbatimIdentification == \"Protomytophum bollini\" ~ \"Protomyctophum bolini\",\n      verbatimIdentification == \"Artedidraco scottsbergi\" ~ \"Artedidraco skottsbergi\",\n      verbatimIdentification == \"Gymnoscophelus braueri\" ~ \"Gymnoscopelus braueri\",\n      # Unidentified == Biota because lifeStage = larvae for these records. Can we be sure that these are fish?\n      Species == \"Unidentified\" ~ \"Biota\", \n      Species == \"/\" ~ \"\",\n      TRUE ~ verbatimIdentification\n    )\n    # no more identificationQualifier, use verbatimIdentification :)\n  )\n  \n# match unique scientificName to WoRMS to obtain LSID of AphiaID\nmatched_taxa &lt;- wm_records_names(unique(cleaned_fish$scientificName)) %&gt;%\n  # the taxon match returns list of lists, this function creates a table of the following fields out of the lists\n  # keep aphiaID for surveyTargetID\n  map_df(~ select(.x, scientificname, lsid, rank, kingdom, AphiaID)) %&gt;%\n  rename(scientificName = scientificname, scientificNameID = lsid, taxonRank = rank)\n\n# join table to get scientificNameID and taxonRank\ncleaned_fish &lt;- cleaned_fish %&gt;% \n  left_join(matched_taxa, by = \"scientificName\")\n\n# preview distinct verbatimIdentification and matched scientificName and scientificNameID from WoRMS\ncleaned_fish %&gt;% distinct(verbatimIdentification, scientificName, scientificNameID, kingdom)",
    "crumbs": [
      "Home",
      "Darwin Core Data Package",
      "Generate tables for DwC-DP"
    ]
  },
  {
    "objectID": "generate-dwc-dp.html#main-tables",
    "href": "generate-dwc-dp.html#main-tables",
    "title": "Transform dataset into DwC-DP",
    "section": "Main tables",
    "text": "Main tables\n\nAgent\n\nagent &lt;- agent %&gt;% filter_dataframe_by_json(\"https://rs.gbif.org/sandbox/experimental/data-packages/dwc-dp/0.1/table-schemas/agent.json\")\n\n\n\nAgent agent role\n\nagent_agent_role &lt;- agent_agent_role %&gt;% filter_dataframe_by_json(\"https://rs.gbif.org/sandbox/experimental/data-packages/dwc-dp/0.1/table-schemas/agent-agent-role.json\")\n\n\n\nBibliographic Resource\n\nbibliographic_resource &lt;- bibliographic_resource %&gt;% filter_dataframe_by_json(\"https://rs.gbif.org/sandbox/experimental/data-packages/dwc-dp/0.1/table-schemas/bibliographic-resource.json\")\n\n\n\nProtocol Reference\nNeeds to come first before Protocol because otherwise filter_dataframe_by_json will remove referenceID from Protocol table.\n\nprotocol_reference &lt;- protocol %&gt;%\n  select(protocolID, referenceID) %&gt;%\n  filter_dataframe_by_json(\"https://rs.gbif.org/sandbox/experimental/data-packages/dwc-dp/0.1/table-schemas/protocol-reference.json\")\n\n\n\nProtocol\n\nprotocol &lt;- filter_dataframe_by_json(protocol, \"https://rs.gbif.org/sandbox/experimental/data-packages/dwc-dp/0.1/table-schemas/protocol.json\")\nprotocol\n\n\n  \n\n\n\n\n\nProvenance\n\nprovenance &lt;- filter_dataframe_by_json(provenance, \"https://rs.gbif.org/sandbox/experimental/data-packages/dwc-dp/0.1/table-schemas/provenance.json\")\n\n\n\nUsage Policy\n\nusage_policy &lt;- tibble(\n  usagePolicyID = \"CC0\",\n  rights = \"Public Domain\",\n  rightsIRI = \"https://creativecommons.org/public-domain/cc0/\",\n  license = \"https://creativecommons.org/public-domain/cc0/\",\n  credit = \"Photo taken by Anton Van de Putte (CC0)\",\n) %&gt;% filter_dataframe_by_json(\"https://rs.gbif.org/sandbox/experimental/data-packages/dwc-dp/0.1/table-schemas/usage-policy.json\")\n\n\n\nEvent\nHow do we determine what eventType to use? e.g. an Event can be both Survey and MaterialGathering.\n\n# Create subevents with net because it is the lowest event with organisms\nsubevents &lt;- event_google %&gt;%\n  filter(eventID != \"BROKE_WEST\") %&gt;% # Exclude the main event\n  mutate(\n    eventType = \"Survey - device subunit\") %&gt;% # Set eventType for subevents\n  expand_grid(suffix = c(\"_RMT1\", \"_RMT8\")) %&gt;% # Create subevent suffixes with net opening\n  mutate(\n    eventID = paste0(eventID, suffix), # Append suffix to eventID\n    parentEventID = eventID %&gt;% sub(\"_RMT[18]$\", \"\", .) # Assign correct parent\n  ) %&gt;%\n  select(-suffix) # Remove the suffix column\n  \n# Combine original and subevents, the sampleSizeValue and sampleSizeUnit are only available for RMT8\nevent &lt;- bind_rows(event_google, subevents) %&gt;%\n  mutate(\n    sampleSizeValue = case_when(\n      str_detect(eventID, \"_RMT8\") ~ sampleSizeValue,\n      TRUE ~ NA\n      ),\n    sampleSizeUnit = case_when(\n    str_detect(eventID, \"_RMT8\") ~ sampleSizeUnit,\n    TRUE ~ NA)\n  )\n\nevent %&gt;% filter(str_starts(eventID, \"BROKE_WEST_RMT_001\")) %&gt;% select(eventID, parentEventID, eventType)\n\n\n  \n\n\n# will only filter for event fields based on DwC-DP schema later since we still need to join Survey table as sampleSizeValue and sampleSizeUnit are now under Survey class.\n\n\n\nSurvey\nSurvey table is a table that contains current Humboldt Extension terms.\n\nsuffixes &lt;- c(\"_RMT1\",\"_RMT8\")\n\nsurvey_w_protocol &lt;- humboldt %&gt;%\n  filter(eventID != \"BROKE_WEST\") %&gt;% # remove the expedition event, only link humboldt to the lowest level of Survey Events\n  expand_grid(suffix = suffixes) %&gt;%\n  mutate(eventID = paste0(eventID, suffix),\n         # need to cast netSize to string so that it can be joined later (so that it is not a double)\n         netSize = case_when(suffix == \"_RMT1\" ~ \"1\", suffix == \"_RMT8\" ~ \"8\", TRUE ~ NA),\n         surveyID = eventID,\n         isLeastSpecificTargetCategoryQuantityInclusive = \"true\") \n\n# join survey_w_protocol with event table to get sampleSizeValue and sampleSizeUnit\nsurvey_w_protocol_sample_size &lt;- event %&gt;%\n  select(eventID, sampleSizeValue, sampleSizeUnit) %&gt;%\n  right_join(survey_w_protocol, by = \"eventID\") \n\nsurvey &lt;- survey_w_protocol_sample_size %&gt;%\n  filter_dataframe_by_json(\"https://rs.gbif.org/sandbox/experimental/data-packages/dwc-dp/0.1/table-schemas/survey.json\")\nhead(survey)\n\n\n  \n\n\n\n\n\nSurvey Target\nAfter extensive discussions on what target is, we decided to create survey-target table retrospectively because the objective of the survey is to quantify the biodiversity at the sites surveyed. SurveyTarget needs to be created per net size because it is linked to a Survey (lowest level of Survey is per net size) via SurveyID.\n\nLimitation: There is only total count for fish from RMT8 and not RMT1. The total count also does not contain any sex and lifeStage for all the taxa except Electrona antarctica.\n\n\nroutine_trawl &lt;- transform_rmt_count_to_long(raw_count_routine)\ntarget_trawl &lt;- transform_rmt_count_to_long(raw_count_target)\n\nsurvey_target &lt;- rbind(routine_trawl$survey_target, target_trawl$survey_target) %&gt;%\n  mutate(includeOrExclude = \"include\", isSurveyTargetFullyReported = \"true\") %&gt;%\n  filter_dataframe_by_json(\"https://rs.gbif.org/sandbox/experimental/data-packages/dwc-dp/0.1/table-schemas/survey-target.json\")\n\n# preview example tables\nhead(survey_target)\n\n\n  \n\n\n\n\n\nOccurrence\n\noccurrence &lt;- rbind(routine_trawl$occurrence, target_trawl$occurrence) %&gt;%\n  mutate(occurrenceID = surveyTargetID,\n         organismQuantityType = case_when(organismQuantity &lt;= 1 ~ \"individual\",\n                                          organismQuantity &gt; 1 ~ \"individuals\")) %&gt;%\n  filter_dataframe_by_json(\"https://rs.gbif.org/sandbox/experimental/data-packages/dwc-dp/0.1/table-schemas/occurrence.json\")\nhead(occurrence)\n\n\n  \n\n\n\n\n\nMaterial\nMaterial includes:\n\npreserved individual fish\nstomach content of individual fish\n\n\nindividual_fish &lt;- cleaned_fish %&gt;% \n  mutate(\n    materialEntityType = \"whole organism\",\n    materialCategory = \"preserved\",\n    collectedBy = \"Anton Van de Putte\",\n    collectedByID = \"https://orcid.org/0000-0003-1336-5554\",\n    identifiedBy = \"Anton Van de Putte\",\n    identifiedByID = \"https://orcid.org/0000-0003-1336-5554\",\n    identificationRemarks = case_when(\n      str_detect(COMMENTS, \"closely resembles\") ~ COMMENTS,\n      str_detect(COMMENTS, \"Protomyctophum\") ~ COMMENTS,\n      TRUE ~ \"\"\n    ),\n    materialEntityRemarks = case_when(\n      str_detect(COMMENTS, \"BROKEN | Check | Microsattelite\") ~ COMMENTS,\n      TRUE ~ \"\"\n    )\n    ) %&gt;% \n  select(\n    materialEntityID, eventID, materialCategory, materialEntityType, preparations, disposition, collectedBy, collectedByID, identifiedBy, identifiedByID, verbatimIdentification, scientificName, scientificNameID, kingdom, taxonRank, identificationRemarks, materialEntityRemarks, AphiaID, lifeStage\n  ) %&gt;% \n  rename(taxonID = scientificNameID) # keep verbatimIdentification, scientificName, scientificNameID, kingdom, taxonRank to construct Identification table\n\nstomach &lt;- raw_stomach %&gt;%\n  rename(stomachItem = `Stomach Item`) %&gt;%\n  mutate(\n    seqNum = sprintf(\"%03d\", row_number()), # zero-padded sequential number\n    materialEntityID = str_c(`Fish ID`, \"_stomach_\", seqNum, \"_\", stomachItem),\n    materialEntityType = case_when(\n      stomachItem == \"St wall\" ~ \"stomachContent - st wall\",\n      stomachItem == \"Mucus\" ~ \"stomachContent - mucus\",\n      stomachItem == \"Other\" ~ \"stomachContent - other\",\n      stomachItem == \"Facet eye\" ~ \"stomachContent - facet eye\",\n      stomachItem == \"/\" ~ \"stomachContent - empty\",\n      TRUE ~ \"stomachContent\"),\n    derivedFromMaterialEntityID = `Fish ID`,\n    materialCategory = \"biological\",\n    derivationType = \"stomach content of\",\n    identifiedBy = \"Anton Van de Putte\",\n    identifiedByID = \"https://orcid.org/0000-0003-1336-5554\",\n    verbatimIdentification = case_when(\n      str_detect(stomachItem, \"St wall|Mucus|Other|Facet eye|\\\\/\") ~  \"\",\n      TRUE ~ stomachItem\n    ),\n    identificationRemarks = case_when(str_detect(Remarks, \"cf.\") ~ Remarks, TRUE ~ \"\"),\n    materialEntityRemarks = case_when(str_detect(Remarks, \"cf.\") ~ \"\", TRUE ~ Remarks),\n  ) %&gt;% \n  left_join(individual_fish, by = c(\"derivedFromMaterialEntityID\" = \"materialEntityID\")) %&gt;%\n  # because left_join renamed the following columns since it is present in both individual_fish and stomach table\n  rename(materialEntityType = materialEntityType.x,\n         verbatimIdentification = verbatimIdentification.x,\n         materialEntityRemarks = materialEntityRemarks.x,\n         identificationRemarks = identificationRemarks.x,\n         identifiedBy = identifiedBy.x,\n         identifiedByID = identifiedByID.x) \n\n# combine both tables into a Material table\n# material_join_identification is needed for Identification table later\nmaterial_join_identification &lt;- bind_rows(individual_fish, stomach) %&gt;%\n  mutate(evidenceForOccurrenceID = case_when(\n      lifeStage != \"\" ~ str_c(eventID, AphiaID, lifeStage, sep = \"_\"),\n      TRUE ~ str_c(eventID, AphiaID, sep = \"_\"))) %&gt;%\n  mutate(\n    evidenceForOccurrenceID = if_else(\n      evidenceForOccurrenceID %in% occurrence$occurrenceID,\n      evidenceForOccurrenceID,\n      str_c(eventID, AphiaID, sep = \"_\")  # rebuild without lifeStage\n    ),\n    evidenceForOccurrenceID = if_else(\n      str_detect(eventID, \"RMT_1\"), # because there is no occurrence record for RMT1\n      \"\", \n      evidenceForOccurrenceID\n    )\n  )\n\nmaterial &lt;- material_join_identification %&gt;%\n  filter_dataframe_by_json(\"https://rs.gbif.org/sandbox/experimental/data-packages/dwc-dp/0.1/table-schemas/material.json\")\n\n# preview record\nmaterial %&gt;% filter(str_starts(materialEntityID, \"AAV3FF_00337\"))\n\n\n  \n\n\n\n\n\nIdentification\n\nfish_id_guide &lt;- \"https://archive.org/details/fishesofsouthern00gono | Kellermann, A. (1990): Identification Key and Catalogue of Larval Antarctic Fishes , Berichte zur Polarforschung (Reports on Polar Research), Bremerhaven, Alfred Wegener Institute for Polar and Marine Research, 67 , 136 p. . doi: 10.2312/BzP_0067_1990 | https://archive.org/details/cybium-7-002-003-074\"\n\nidentification &lt;- material_join_identification %&gt;%\n  mutate(\n    identificationID = paste(materialEntityID, \"ID\", sep = \"_\"),\n    basedOnMaterialEntityID = materialEntityID,\n    identificationType = \"MaterialEntity\",\n    identifiedBy = \"Anton Van de Putte\",\n    identifiedByID = \"https://orcid.org/0000-0003-1336-5554\",\n    identificationReferences = fish_id_guide,\n    higherClassificationName = if_else(!is.na(kingdom) & kingdom != \"\", kingdom, NA_character_),\n    higherClassificationRank = if_else(!is.na(kingdom) & kingdom != \"\", \"kingdom\", NA_character_)) %&gt;%\n  filter_dataframe_by_json(\"https://rs.gbif.org/sandbox/experimental/data-packages/dwc-dp/0.1/table-schemas/identification.json\")\nhead(identification)\n\n\n  \n\n\n\n\n\nMedia\n\nmedia_material &lt;- media_google %&gt;% \n  # also needed to construct Material Media table later\n  left_join(material, by = \"materialEntityID\") %&gt;% \n  # remove these media records because there is no data associated with these pictures -&gt; we don't know what these are\n  filter(!is.na(eventID)) %&gt;%\n  mutate(\n    description = str_c(\"Photo of \", scientificName, \" with its label and a grid.\"))\n\nmedia &lt;- filter_dataframe_by_json(media_material, \"https://rs.gbif.org/sandbox/experimental/data-packages/dwc-dp/0.1/table-schemas/media.json\")\nhead(media)",
    "crumbs": [
      "Home",
      "Darwin Core Data Package",
      "Generate tables for DwC-DP"
    ]
  },
  {
    "objectID": "generate-dwc-dp.html#common-tables",
    "href": "generate-dwc-dp.html#common-tables",
    "title": "Transform dataset into DwC-DP",
    "section": "Common tables",
    "text": "Common tables\n\nTables not needed: Agent related tables\nThe event_agent_roles and identification_agent_roles aren’t actually necessary because those roles are hard-wired elsewhere in the schema in a simpler way. Specifically, identification has identifiedBy and identifiedByID, which can be populated directly with the name and the ORCID. Similarly with collectedBy and collectorID in the material table. Similarly for samplingPerformedBy and samplingPerformedByID.\n\n\nAssertion\n\nEvent Assertion\nPlacing environmental measurements under Event Assertion instead of Survey Assertion because it is for both RMT1 and RMT8. Putting this at the level of station Event and not net Event.\nExpedition\n|__ Sampling station\n    |__ RMT1\n    |__ RMT8\n\nassertion &lt;- emof %&gt;% \n  rename(assertionID = measurementID, assertionType = measurementType, assertionTypeIRI = measurementTypeID, assertionValueIRI = measurementValueID, assertionUnit = measurementUnit, assertionUnitIRI = measurementUnitID) %&gt;%\n  mutate(assertionValue = if_else(grepl(\"[a-zA-Z]\", measurementValue), measurementValue, NA),\n    assertionValueNumeric = if_else(!grepl(\"[a-zA-Z]\", measurementValue), as.numeric(measurementValue), NA))\n\nevent_assertion &lt;- assertion %&gt;% \n  filter(is.na(occurrenceID)) %&gt;%\n  mutate(\n    eventID = case_when(\n      # because sampled volume is only available for RMT8\n      assertionType == \"Sampled volume\" ~ str_c(eventID, \"_RMT8\"),\n      TRUE ~ eventID\n    ),\n    assertionID = case_when(\n      assertionType == \"Sampled volume\" ~ str_c(eventID, \"_RMT8_\", assertionType),\n      TRUE ~ assertionID\n    ),\n    assertionTypeVocabulary = \"http://vocab.nerc.ac.uk/collection/P01/current/\",\n    assertionProtocols = case_when(\n      assertionType %in% c(\"Average temperature\", \"Maximum Pressure\", \"Average Salinity\", \"Average Conductivity\", \"Average fluoresence\") ~ \"CTD\",\n      assertionType %in% c(\"Solar Azimuth\", \"Solar elevation\", \"daylength\") ~ \"solar azimuth, elevation and day length\",\n      TRUE ~ \"\"),\n    assertionProtocolID = case_when(\n      assertionProtocols == \"CTD\" ~ \"ctd\",\n      assertionProtocols == \"solar azimuth, elevation and day length\" ~ \"light_conditions\",\n      TRUE ~ \"\"),\n    assertionUnitVocabulary = \"http://vocab.nerc.ac.uk/collection/P06/current/\" \n    ) %&gt;%\n  filter_dataframe_by_json(\"https://rs.gbif.org/sandbox/experimental/data-packages/dwc-dp/0.1/table-schemas/event-assertion.json\")\nevent_assertion %&gt;% filter(assertionID == \"BROKE_WEST_RMT_028_temp\")\n\n\n  \n\n\n\n\n\nMaterial Assertion\n\nfish_length_assertion &lt;- assertion %&gt;% \n  filter(!is.na(occurrenceID)) %&gt;%\n  rename(materialEntityID = occurrenceID) %&gt;%\n  filter_dataframe_by_json(\"https://rs.gbif.org/sandbox/experimental/data-packages/dwc-dp/0.1/table-schemas/material-assertion.json\")\n\nfish_lifestage_assertion &lt;- cleaned_fish %&gt;%\n  filter(!is.na(lifeStage)) %&gt;%\n  select(materialEntityID, lifeStage) %&gt;%\n  rename(assertionValue = lifeStage) %&gt;%\n  mutate(assertionID = str_c(materialEntityID, \"_lifeStage\"),\n         assertionType = \"life stage\",\n         assertionTypeIRI = \"http://rs.tdwg.org/dwc/terms/lifeStage\",\n         assertionValueIRI = case_when(\n           assertionValue == \"Larvae\" ~ \"https://vocab.nerc.ac.uk/collection/S11/current/S1128/\",\n           TRUE ~ NA\n         ),\n         assertionUnit = NA,\n         assertionUnitIRI = NA,\n         assertionValueNumeric = NA) \n\nstomach_assertion &lt;- stomach %&gt;%\n  select(materialEntityID, DoD, No) %&gt;% \n  pivot_longer(\n    cols = c(DoD, No),\n    names_to = \"assertionType\",\n    values_to = \"assertionValueNumeric\",\n    values_drop_na = TRUE\n  ) %&gt;%\n  mutate(\n    assertionType = recode(assertionType,\n                           DoD = \"degree of digestion\",\n                           No = \"individual count\"),\n    assertionID = case_when(\n      assertionType == \"degree of digestion\" ~ str_c(materialEntityID, \"_digestion\"),\n      assertionType == \"individual count\" ~ str_c(materialEntityID, \"_count\")),\n    assertionTypeIRI = \"\",\n    assertionValueIRI = \"\",\n    assertionUnit = \"\",\n    assertionUnitIRI = \"\",\n    assertionValue = \"\"\n  )\n\nmaterial_assertion &lt;- rbind(fish_length_assertion, fish_lifestage_assertion, stomach_assertion) %&gt;%\n  filter_dataframe_by_json(\"https://rs.gbif.org/sandbox/experimental/data-packages/dwc-dp/0.1/table-schemas/material-assertion.json\")\nmaterial_assertion %&gt;% filter(materialEntityID == \"AAV3FF_00337\")\n\n\n  \n\n\n\n\n\n\nMedia\n\nMaterial Media\n\nmaterial_media &lt;- media_material %&gt;%\n  mutate(mediaSubjectCategory = \"specimen photo\") %&gt;%\n  filter_dataframe_by_json(\"https://rs.gbif.org/sandbox/experimental/data-packages/dwc-dp/0.1/table-schemas/material-media.json\")\nhead(material_media)\n\n\n  \n\n\n\n\n\n\nProtocol\n\nSurvey Protocol\nAs Event is also a Survey, I use Survey Protocol table instead of Event Protocol table.\n\nsurvey_protocol &lt;- survey_w_protocol %&gt;% \n  select(surveyID, samplingProtocol) %&gt;% \n  rename(protocolID = samplingProtocol) %&gt;%\n  filter(!is.na(protocolID))\nsurvey_protocol %&gt;% filter(surveyID == \"BROKE_WEST_RMT_001_RMT8\")\n\n\n  \n\n\n\n\n\n\nIdentifier\n\nAgent Identifier\n\nagent_identifier &lt;- tibble(\n  identifier = \"https://orcid.org/0000-0003-1336-5554\",\n  agentID = \"https://orcid.org/0000-0003-1336-5554\",\n  identifierType = \"ORCID\",\n  identifierLanguage = \"eng\"\n) %&gt;% filter_dataframe_by_json(\"https://rs.gbif.org/sandbox/experimental/data-packages/dwc-dp/0.1/table-schemas/agent-identifier.json\")\nagent_identifier",
    "crumbs": [
      "Home",
      "Darwin Core Data Package",
      "Generate tables for DwC-DP"
    ]
  },
  {
    "objectID": "explore-dwc-dp.html#explore-the-dwc-dp-tables",
    "href": "explore-dwc-dp.html#explore-the-dwc-dp-tables",
    "title": "Explore DwC-DP",
    "section": "",
    "text": "You can load all the RDA files like below and play around with the tables as demonstrated in this page. Any pull request is also welcomed.\n\nlibrary(here)\nlibrary(tidyverse)\n\n# Load all the RDA files\nrda_files &lt;- list.files(path = here(\"data\", \"output\", \"rda\"), pattern = \"\\\\.rda$\", full.names = TRUE)\nlapply(rda_files, load, envir = .GlobalEnv)",
    "crumbs": [
      "Home",
      "Darwin Core Data Package",
      "Exploring DwC-DP"
    ]
  },
  {
    "objectID": "explore-dwc-dp.html#community-measurements",
    "href": "explore-dwc-dp.html#community-measurements",
    "title": "Explore DwC-DP",
    "section": "Community measurements",
    "text": "Community measurements\nDoes DwC-DP handles community measurements better than DwCA?\n\nDwCA\nIn DwCA, we will have to have all these as Occurrence records so that measurements like “Standard Length” and “Total Length” of each individual in emof has an Occurrence record to point to. However, this does not warrant user to add the organismQuantity of all individuals together.\n\n\nOccurrence table in DwCA\n\n\n\n\n\n\n\n\n\n\noccurrenceID\neventID\nscientificName\nlifeStage\norganismQuantity\norganismQuantityType\n\n\n\n\nBROKE_WEST_RMT_051_RMT8_217697\nBROKE_WEST_RMT_051_RMT8\nElectrona antarctica\n\n28\nindividuals\n\n\nAAV3FF_00231\nBROKE_WEST_RMT_051_RMT8\nElectrona antarctica\nlarvae\n1\nindividual\n\n\nAAV3FF_00232\nBROKE_WEST_RMT_051_RMT8\nElectrona antarctica\nlarvae\n1\nindividual\n\n\nAAV3FF_00233\nBROKE_WEST_RMT_051_RMT8\nElectrona antarctica\nlarvae\n1\nindividual\n\n\nAAV3FF_00234\nBROKE_WEST_RMT_051_RMT8\nElectrona antarctica\nlarvae\n1\nindividual\n\n\nAAV3FF_00235\nBROKE_WEST_RMT_051_RMT8\nElectrona antarctica\nlarvae\n1\nindividual\n\n\nAAV3FF_00236\nBROKE_WEST_RMT_051_RMT8\nElectrona antarctica\nlarvae\n1\nindividual\n\n\nAAV3FF_00237\nBROKE_WEST_RMT_051_RMT8\nElectrona antarctica\nlarvae\n1\nindividual\n\n\nAAV3FF_00238\nBROKE_WEST_RMT_051_RMT8\nElectrona antarctica\nlarvae\n1\nindividual\n\n\nAAV3FF_00239\nBROKE_WEST_RMT_051_RMT8\nElectrona antarctica\nlarvae\n1\nindividual\n\n\nAAV3FF_00240\nBROKE_WEST_RMT_051_RMT8\nElectrona antarctica\nlarvae\n1\nindividual\n\n\nAAV3FF_00241\nBROKE_WEST_RMT_051_RMT8\nElectrona antarctica\nlarvae\n1\nindividual\n\n\n\n\nThis has improved with the term eco:isLeastSpecificTargetCategoryQuantityInclusive from the Humboldt Extension. If the event has isLeastSpecificTargetCategoryQuantityInclusive = true, the count in organismQuantity of the Occurrence includes all of the larvae individuals.\n\n\nDwC-DP\nThe Occurrence and Material are separate concepts now. We do not need to have a separate Occurrence just to indicate the total catch of a taxon. We can have a single Occurrence (total catch) with multiple Materials (individual) to indicate the total catch and preserved individuals. The measurements of the individuals (Assertions) can be directly linked to the Materials via the Material Assertion table.\n\nevent_id &lt;- \"BROKE_WEST_RMT_051_RMT8\"\ntaxon_id &lt;- \"urn:lsid:marinespecies.org:taxname:217697\"\n\n# isLeastSpecificTargetCategoryQuantityInclusive for the Event?\nsurvey %&gt;% filter(eventID == event_id) %&gt;% select(eventID, isLeastSpecificTargetCategoryQuantityInclusive)\n\n\n  \n\n\n# total catch of electrona antarctica from BROKE_WEST_RMT_051_RMT8\n# because isLeastSpecificTargetCategoryQuantityInclusive = true, the count in organismQuantity of occurrenceID BROKE_WEST_RMT_051_RMT8_217697 includes the larvae from BROKE_WEST_RMT_051_RMT8_217697_Larvae\noccurrence %&gt;% filter(eventID == event_id & taxonID == taxon_id) %&gt;% \n  select(eventID, occurrenceID, scientificName, lifeStage, organismQuantity, organismQuantityType)\n\n\n  \n\n\n# all preserved electrona antarctica from BROKE_WEST_RMT_051_RMT8\nmat &lt;- material %&gt;% filter(eventID == event_id & taxonID == taxon_id) %&gt;% \n  select(materialEntityID, eventID, materialEntityType, scientificName, preparations)\nmat\n\n\n  \n\n\n# all measurements of individual electrona antarctica from BROKE_WEST_RMT_051_RMT8\nmat %&gt;% left_join(material_assertion, by = \"materialEntityID\") %&gt;% \n  select(materialEntityID, assertionType, assertionValueNumeric, assertionValue, assertionUnit)",
    "crumbs": [
      "Home",
      "Darwin Core Data Package",
      "Exploring DwC-DP"
    ]
  },
  {
    "objectID": "explore-dwc-dp.html#body-part-measurements",
    "href": "explore-dwc-dp.html#body-part-measurements",
    "title": "Explore DwC-DP",
    "section": "Body part measurements",
    "text": "Body part measurements\nVery often, we received dataset with measurements performed on a specific body part of an organism. Example: https://www.gbif.org/occurrence/3344249657\n\nDwCA\nIt is difficult to model with DwCA because:\n\na specific body part/sample of an organism is not an Occurrence nor an Event\nit is difficult to express relationship between a Material (e.g. body part) and the Organism\nit is difficult to distinguish measurements performed on a Material of an dwc:Organism and to express that the Organism was preserved and located in certain collection from an institution.\n\nCurrently, I modeled it using eMoF pointing to the Occurrence with body part in measurementRemarks. Specifying the body part can be embedded in a matrix of a NERC vocabulary but it is not practical to mint NERC for every body part and body part is specific to a taxon.\n\n\nOccurrence table in DwCA\n\n\noccurrenceID\nscientificName\n\n\n\n\nSO_Isotope_1985_2017_1013\nGlabraster antarctica (E.A.Smith, 1876)\n\n\n\n\n\n\neMoF table in DwCA\n\n\n\n\n\n\n\n\n\noccurrenceID\nmeasurementType\nmeasurementValue\nmeasurementUnit\nmeasurementRemarks\n\n\n\n\nSO_Isotope_1985_2017_1013\nThe carbon elemental content measured in the tegument of the considered sea star specimen, expressed in relative percentage of dry mass\n12.28\nrelative percentage of dry mass\ntegument\n\n\n\n\n\n\nDwC-DP\nRelationship between Materials can be specified through the derivedFromMaterialEntityID field. Example of a krill eaten by a fish can be modeled within a single Material table.\n\nmaterial %&gt;% filter(str_starts(materialEntityID, \"AAV3FF_00025\")) %&gt;% \n  select(materialEntityID, derivedFromMaterialEntityID, materialEntityType, scientificName, materialEntityRemarks)",
    "crumbs": [
      "Home",
      "Darwin Core Data Package",
      "Exploring DwC-DP"
    ]
  },
  {
    "objectID": "explore-dwc-dp.html#non-detections",
    "href": "explore-dwc-dp.html#non-detections",
    "title": "Explore DwC-DP",
    "section": "Non-detections",
    "text": "Non-detections\n\nDwCA\nBefore Humboldt Extension was developed, non-detections are represented as an Occurrence record with occurrenceStatus = absent in DwCA.\nWhen Humboldt Extension comes along, non-detections can be inferred by looking at the target scopes that do not have an Occurrence record if the target scope was fully reported.\n\n\nDwC-DP\nIn DwC-DP, non-detections can be represented as an Occurrence with occurrenceStatus = absent, just like in DwCA. Similarly, non-detections can also be inferred by looking at the SurveyTarget that do not have an Occurrence record if only detections were reported.\n\nlibrary(ggplot2)\n\ntarget_taxa &lt;- survey_target %&gt;% \n  filter(surveyTargetType == \"taxon\") %&gt;%\n  select(surveyID, surveyTargetID, surveyTargetValue) %&gt;%\n  rename(scientificName = surveyTargetValue) %&gt;%\n  distinct()\n\noccurrence_taxa &lt;- occurrence %&gt;% \n  select(surveyTargetID, eventID, scientificName, eventID) %&gt;%\n  rename(surveyID = eventID) %&gt;%\n  distinct()\n\ndetections_and_non_detections &lt;- occurrence_taxa %&gt;% \n  full_join(target_taxa, by = c(\"surveyID\", \"surveyTargetID\")) %&gt;%\n  rename(targetTaxon = scientificName.y, occurrenceTaxon = scientificName.x) %&gt;%\n  mutate(occurrenceStatus = case_when(is.na(occurrenceTaxon) ~ \"notDetected\", TRUE ~ \"detected\"))\n\n# Swap the axes so survey IDs are on the y-axis\nggplot(detections_and_non_detections, aes(y = surveyID, x = targetTaxon, fill = occurrenceStatus)) +\n  geom_tile(color = \"white\", linewidth = 0.5) +\n  scale_fill_manual(values = c(\"detected\" = \"#1e88e5\", \"notDetected\" = \"#ffcdd2\")) +\n  labs(\n    title = \"Occurrence Status by Target Taxon and Survey\",\n    y = \"Survey ID\",  # Now on y-axis\n    x = \"Target Taxon\",  # Now on x-axis\n    fill = \"occurrenceStatus\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_text(size = 7.5),  # Small text for survey IDs\n    axis.text.x = element_text(size = 9, angle = 45, hjust = 1),  # Angled species names\n    panel.grid = element_blank(),\n    legend.position = \"bottom\"\n  )",
    "crumbs": [
      "Home",
      "Darwin Core Data Package",
      "Exploring DwC-DP"
    ]
  },
  {
    "objectID": "explore-dwc-dp.html#trade-off-between-expressiveness-of-dwc-dp-and-simplicity-of-dwca",
    "href": "explore-dwc-dp.html#trade-off-between-expressiveness-of-dwc-dp-and-simplicity-of-dwca",
    "title": "Explore DwC-DP",
    "section": "Trade off between expressiveness of DwC-DP and simplicity of DwCA?",
    "text": "Trade off between expressiveness of DwC-DP and simplicity of DwCA?",
    "crumbs": [
      "Home",
      "Darwin Core Data Package",
      "Exploring DwC-DP"
    ]
  },
  {
    "objectID": "generate-dwc-dp.html#joined-tables",
    "href": "generate-dwc-dp.html#joined-tables",
    "title": "Transform dataset into DwC-DP",
    "section": "Joined tables",
    "text": "Joined tables\n\nTables not needed: Agent related tables\nThe event_agent_roles and identification_agent_roles aren’t actually necessary because those roles are hard-wired elsewhere in the schema in a simpler way. Specifically, identification has identifiedBy and identifiedByID, which can be populated directly with the name and the ORCID. Similarly with collectedBy and collectorID in the material table. Similarly for samplingPerformedBy and samplingPerformedByID.\n\n\nAssertion\n\nEvent Assertion\nPlacing environmental measurements under Event Assertion instead of Survey Assertion because it is for both RMT1 and RMT8. Putting this at the level of station Event and not net Event.\nExpedition\n|__ Sampling station\n    |__ RMT1\n    |__ RMT8\n\nassertion &lt;- emof %&gt;% \n  rename(assertionID = measurementID, assertionType = measurementType, assertionTypeIRI = measurementTypeID, assertionValueIRI = measurementValueID, assertionUnit = measurementUnit, assertionUnitIRI = measurementUnitID) %&gt;%\n  mutate(assertionValue = if_else(grepl(\"[a-zA-Z]\", measurementValue), measurementValue, NA),\n    assertionValueNumeric = if_else(!grepl(\"[a-zA-Z]\", measurementValue), as.numeric(measurementValue), NA))\n\nevent_assertion &lt;- assertion %&gt;% \n  filter(is.na(occurrenceID)) %&gt;%\n  mutate(\n    eventID = case_when(\n      # because sampled volume is only available for RMT8\n      assertionType == \"Sampled volume\" ~ str_c(eventID, \"_RMT8\"),\n      TRUE ~ eventID\n    ),\n    assertionID = case_when(\n      assertionType == \"Sampled volume\" ~ str_c(eventID, \"_RMT8_\", assertionType),\n      TRUE ~ assertionID\n    ),\n    assertionTypeVocabulary = \"http://vocab.nerc.ac.uk/collection/P01/current/\",\n    assertionProtocols = case_when(\n      assertionType %in% c(\"Average temperature\", \"Maximum Pressure\", \"Average Salinity\", \"Average Conductivity\", \"Average fluoresence\") ~ \"CTD\",\n      assertionType %in% c(\"Solar Azimuth\", \"Solar elevation\", \"daylength\") ~ \"solar azimuth, elevation and day length\",\n      TRUE ~ \"\"),\n    assertionProtocolID = case_when(\n      assertionProtocols == \"CTD\" ~ \"ctd\",\n      assertionProtocols == \"solar azimuth, elevation and day length\" ~ \"light_conditions\",\n      TRUE ~ \"\"),\n    assertionUnitVocabulary = \"http://vocab.nerc.ac.uk/collection/P06/current/\" \n    ) %&gt;%\n  filter_dataframe_by_json(\"https://rs.gbif.org/sandbox/experimental/data-packages/dwc-dp/0.1/table-schemas/event-assertion.json\")\nevent_assertion %&gt;% filter(assertionID == \"BROKE_WEST_RMT_028_temp\")\n\n\n  \n\n\n\n\n\nMaterial Assertion\n\nfish_length_assertion &lt;- assertion %&gt;% \n  filter(!is.na(occurrenceID)) %&gt;%\n  rename(materialEntityID = occurrenceID) %&gt;%\n  filter_dataframe_by_json(\"https://rs.gbif.org/sandbox/experimental/data-packages/dwc-dp/0.1/table-schemas/material-assertion.json\")\n\nfish_lifestage_assertion &lt;- cleaned_fish %&gt;%\n  filter(!is.na(lifeStage)) %&gt;%\n  select(materialEntityID, lifeStage) %&gt;%\n  rename(assertionValue = lifeStage) %&gt;%\n  mutate(assertionID = str_c(materialEntityID, \"_lifeStage\"),\n         assertionType = \"life stage\",\n         assertionTypeIRI = \"http://rs.tdwg.org/dwc/terms/lifeStage\",\n         assertionValueIRI = case_when(\n           assertionValue == \"Larvae\" ~ \"https://vocab.nerc.ac.uk/collection/S11/current/S1128/\",\n           TRUE ~ NA\n         ),\n         assertionUnit = NA,\n         assertionUnitIRI = NA,\n         assertionValueNumeric = NA) \n\nstomach_assertion &lt;- stomach %&gt;%\n  select(materialEntityID, DoD, No) %&gt;% \n  pivot_longer(\n    cols = c(DoD, No),\n    names_to = \"assertionType\",\n    values_to = \"assertionValueNumeric\",\n    values_drop_na = TRUE\n  ) %&gt;%\n  mutate(\n    assertionType = recode(assertionType,\n                           DoD = \"degree of digestion\",\n                           No = \"individual count\"),\n    assertionID = case_when(\n      assertionType == \"degree of digestion\" ~ str_c(materialEntityID, \"_digestion\"),\n      assertionType == \"individual count\" ~ str_c(materialEntityID, \"_count\")),\n    assertionTypeIRI = \"\",\n    assertionValueIRI = \"\",\n    assertionUnit = \"\",\n    assertionUnitIRI = \"\",\n    assertionValue = \"\"\n  )\n\nmaterial_assertion &lt;- rbind(fish_length_assertion, fish_lifestage_assertion, stomach_assertion) %&gt;%\n  filter_dataframe_by_json(\"https://rs.gbif.org/sandbox/experimental/data-packages/dwc-dp/0.1/table-schemas/material-assertion.json\")\nmaterial_assertion %&gt;% filter(materialEntityID == \"AAV3FF_00337\")\n\n\n  \n\n\n\n\n\n\nProvenance\n\nEvent Provenance\n\nevent_provenance &lt;- crossing(\n  provenance %&gt;% select(provenanceID),\n  event %&gt;% select(eventID)\n)\nhead(event_provenance)\n\n\n  \n\n\n\n\n\nMaterial Provenance\n\nmaterial_provenance &lt;- crossing(\n  provenance %&gt;% select(provenanceID),\n  material %&gt;% select(materialEntityID)\n)\nhead(material_provenance)\n\n\n  \n\n\n\n\n\nMedia Provenance\n\nmedia_provenance &lt;- crossing(\n  provenance %&gt;% select(provenanceID),\n  media %&gt;% select(mediaID)\n)\nhead(media_provenance)\n\n\n  \n\n\n\n\n\n\nUsage Policy\n\nMedia Usage Policy\n\nmedia_usage_policy &lt;- crossing(\n  usage_policy %&gt;% select(usagePolicyID),\n  media %&gt;% select(mediaID)\n)\nhead(media_usage_policy)\n\n\n  \n\n\n\n\n\n\nMedia\n\nMaterial Media\n\nmaterial_media &lt;- media_material %&gt;%\n  mutate(mediaSubjectCategory = \"specimen photo\") %&gt;%\n  filter_dataframe_by_json(\"https://rs.gbif.org/sandbox/experimental/data-packages/dwc-dp/0.1/table-schemas/material-media.json\")\nhead(material_media)\n\n\n  \n\n\n\n\n\n\nProtocol\n\nSurvey Protocol\nAs Event is also a Survey, I use Survey Protocol table instead of Event Protocol table.\n\nsurvey_protocol &lt;- survey_w_protocol %&gt;% \n  select(surveyID, samplingProtocol) %&gt;% \n  rename(protocolID = samplingProtocol) %&gt;%\n  filter(!is.na(protocolID))\nsurvey_protocol %&gt;% filter(surveyID == \"BROKE_WEST_RMT_001_RMT8\")\n\n\n  \n\n\n\n\n\n\nIdentifier\n\nAgent Identifier\n\nagent_identifier &lt;- agent_identifier %&gt;% filter_dataframe_by_json(\"https://rs.gbif.org/sandbox/experimental/data-packages/dwc-dp/0.1/table-schemas/agent-identifier.json\")\nagent_identifier",
    "crumbs": [
      "Home",
      "Darwin Core Data Package",
      "Generate tables for DwC-DP"
    ]
  }
]